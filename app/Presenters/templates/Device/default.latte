{block content}

<h1 class="main-header" style="display: none;" id="error">Nepodporovaný prohlížeč</h1>
<div id="connection" style="display: none;" class="main-text">
<div id="connect" style="padding: 12.5%;">
<button class="input-button" style="background: linear-gradient(to top, #268101, #51e906ea);" onclick="_devices()">Připojit</button>
</div>
<button id="disconnect" class="input-button invisible" style="background: linear-gradient(to top, #810101, #e90606ea);" onclick="_disconnect()">Odpojit</button>
</div>
<div id="success"></div>
<div id="disconnected"></div>
<div class="main-text invisible" id="form">
        <h3>Zapsání dat z časomíry do výsledků</h3>
        <div style="margin-top: 20px;">
            <label>Tým: <select id="tym"></label>
            {foreach $tymy as $kat=>$tym}
            <optgroup label={$kat}>
                {foreach $tym as $id=>$Tym}
                <option value={$id}>{$Tym}</option>
                {/foreach}
            </optgroup>
            {/foreach}
            </select>
        </div>
        <div style="margin-top: 20px;">
        <label>Čas: <input id="time" type="text" required placeholder="00:00:00.00" inputmode="numeric" step="1" readonly></label>
        </div>
        <div style="margin-top: 20px;">
            <button onclick="sendData()" class="input-button">Zapsat</button>
        </div>
</div>
<div id="customConsole" class="main-text invisible" style="border: 1px solid #ccc; padding: 10px; height: 200px; overflow: auto;"></div>
<br>
<div class="invisible main-text" id="table">
<a class="input-button" href="{link Preview:default, id =>  $user->getIdentity()->id}" target="_blank" rel="noopener noreferrer">Výsledky</a>
</div>
<script>
    let port;
    let baudrate = 115200;
    let reader;

    connection();

    function connection() {
        if ("serial" in navigator) {
            document.getElementById("connection").style = "display: block";
            document.getElementById("disconnect").classList.add("invisible");
            document.getElementById("table").classList.add("invisible");
            document.getElementById("form").classList.add("invisible");
            document.getElementById("customConsole").classList.add("invisible");
            document.getElementById("animation-green").classList.add("invisible");
            return true;
        }
        document.getElementById("error").style = "display: block";
        return false;
    }

    function _devices() {
        if (connection() == false) { return; }
        navigator.serial.requestPort().then(
            (p) => {
                port = p;
                port.open({ baudRate: baudrate }).then(
                    () => {
                        addNotification();
                        console.log(/*port.getInfo()*/"Úspěšně připojeno!");
                        document.getElementById("disconnect").classList.remove("invisible");
                        document.getElementById("table").classList.remove("invisible");
                        document.getElementById("form").classList.remove("invisible");
                        document.getElementById("customConsole").classList.remove("invisible");
                        document.getElementById("animation-green").classList.remove("invisible");
                        document.getElementById("connect").classList.add("invisible");
                        document.getElementById("animation-red").classList.add("invisible");
                        readData(); // Přidáno volání funkce pro čtení dat
                    }
                );
            }
        );
    }

    async function readData() {
    if (port) {
        const textDecoder = new TextDecoderStream();
        const readableStreamClosed = port.readable.pipeTo(textDecoder.writable);
        reader = textDecoder.readable.getReader();

        let partialMessage = ''; // Variable to accumulate partial message

        while (true) {
            try {
                const { value, done } = await reader.read();
                if (done) {
                    console.log("Čtení dokončeno. Zavírám.");
                    break;
                }

                // Split the received chunk by newline characters
                const chunks = (partialMessage + value).split('\n');

                // Iterate over the chunks, excluding the last one (incomplete message)
                for (let i = 0; i < chunks.length - 1; i++) {
                        const completeMessage = chunks[i].trim();
                        if (completeMessage.includes('0')) {
                            logToConsole("Získaný čas: " + completeMessage);
                            document.getElementById('time').value=completeMessage;
                        }else{
                            console.log(completeMessage);
                        }
                }

                // Store the last chunk as the new partial message
                partialMessage = chunks[chunks.length - 1];
            } catch (error) {
                console.error("Error při čtení dat:", error);
            }
        }
    }
}
    function getURL(){
        let url = window.location.href.split("/");
        let urls = "";
        url[url.length - 1] = "data";
        for(let i = 0; i<url.length; i++){
            if(i !== 0){
                urls += "/";
            }
            urls += url[i];
        }
        return urls;
    }

    function sendData() {
        let Data = document.getElementById('time').value;
        let Tym = document.getElementById('tym').value;
        let User = {$user->getIdentity()->id};
        if(!Data){
            return;
        } else {
            let json_data = JSON.stringify({ Data: Data, Tym: Tym, User: User });
            fetch(getURL(), { method:"POST", body:json_data }).then(()=>{
                // logToConsole("Čas: " + Data + " Tým: " + Tym);
                document.getElementById("animation-send").classList.remove("invisible");

                // Add a delay of 5 seconds (5000 milliseconds)
                setTimeout(function () {
                    document.getElementById("animation-send").classList.add("invisible");
                }, 3000);
            });
        }

    }


    function _disconnect() {
        if (connection() == false) { return; }
        if (reader) {
            reader.cancel(); // Zrušení čtení před odpojením
        }
        port.forget().then(
            () => {
                addNotificationDisconnect();
                document.getElementById("connect").classList.remove("invisible");
                document.getElementById("disconnect").classList.add("invisible");
                document.getElementById("animation-red").classList.remove("invisible");
            }
        );
    }

    function addNotification() {
        // ... (Zůstává beze změn)
    }

    function addNotificationDisconnect() {
        // ... (Zůstává beze změn)
    }

    function logToConsole(message) {
    var consoleDiv = document.getElementById("customConsole");
    if (typeof message === 'object') {
        message = JSON.stringify(message);
    }
    const formattedMessage = message.trim(); // Remove leading/trailing whitespace

    // Extract the actual data without the prefix
    const dataWithoutPrefix = formattedMessage.replace(/^Získaný čas: /, '');

    // Keep the time and "Received data:" in the console
    const consoleEntry = document.createElement('div');
    consoleEntry.classList.add('console-entry');
    consoleEntry.innerHTML = formattedMessage;
    consoleDiv.appendChild(consoleEntry);

    // Add click event listener to each console entry
    consoleEntry.addEventListener('click', () => {
        // Insert only the data into the input with ID "time"
        document.getElementById('time').value = dataWithoutPrefix;
    });

    consoleDiv.scrollTop = consoleDiv.scrollHeight; // Auto-scroll to the bottom
    }

    // Redirect console.log to the custom console
    console.log = function (message) {
        logToConsole(message);
    };
</script>
<figure id="animation-green" class="notification invisible">
	<div class="notification_body">
		<img src="https://www.cestakvitezstvi.cz/src/check-circle.svg"
			title="Success" alt="Success" class="notification_icon" />
		Připojeno! &#x1F44D;
	</div>
	<div class="notification_progress"></div>
</figure>
<figure id="animation-red" class="d_notification invisible">
	<div class="d_notification_body">
		<img src="https://www.cestakvitezstvi.cz/src/red-cross.svg"
			title="Success" alt="Success" class="d_notification_icon" />
		Odpojeno! &#x1F44D;
	</div>
	<div class="d_notification_progress"></div>
</figure>
</figure>
<figure id="animation-send" class="l_notification invisible">
	<div class="l_notification_body">
		<img src="https://www.cestakvitezstvi.cz/src/blue-check.png"
			title="Success" alt="Success" class="l_notification_icon" />
		Odesláno! &#x1F44D;
	</div>
	<div class="l_notification_progress"></div>
</figure>

<style>
    .console-entry {
    cursor: pointer;
    padding: 5px;
    margin-bottom: 5px;
    background-color: #f0f0f0; /* Adjust as needed */
    border: 1px solid #ccc;
    border-radius: 3px;
}

.console-entry:hover {
    background-color: #e0e0e0; /* Adjust as needed */
}
</style>
{/block}
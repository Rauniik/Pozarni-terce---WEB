{block content}

<h1 class="main-header" style="display: none;" id="error">Nepodporovaný prohlížeč</h1>
<div id="connection" style="display: none;" class="main-text">
<button id="connect" class="input-button" style="background: linear-gradient(to top, #268101, #51e906ea);" onclick="_devices()">Připojit</button>
<button id="disconnect" class="input-button invisible" style="background: linear-gradient(to top, #810101, #e90606ea);" onclick="_disconnect()">Odpojit</button>
</div>
<div id="success"></div>
<div id="disconnected"></div>
<div class="main-text">
        <div style="margin-top: 20px;">
            <select id="tym">
            {foreach $tymy as $kat=>$tym}
            <optgroup label={$kat}>
                {foreach $tym as $id=>$Tym}
                <option value={$id}>{$Tym}</option>
                {/foreach}
            </optgroup>
            {/foreach}
            </select>
        </div>
        <div style="margin-top: 20px;">
        <label>Čas: <input id="time" type="text" required placeholder="00:00:00.00" inputmode="numeric" step="1" readonly></label>
        </div>
        <div style="margin-top: 20px;">
            <button onclick="sendData()" class="input-button">Zapsat</button>
        </div>
</div>
<script>
    let port;
    let baudrate = 115200;
    let reader;

    connection();

    function connection() {
        if ("serial" in navigator) {
            document.getElementById("connection").style = "display: block";
            document.getElementById("disconnect").classList.add("invisible");
            return true;
        }
        document.getElementById("error").style = "display: block";
        return false;
    }

    function _devices() {
        if (connection() == false) { return; }
        navigator.serial.requestPort().then(
            (p) => {
                port = p;
                port.open({ baudRate: baudrate }).then(
                    () => {
                        addNotification();
                        console.log(port.getInfo());
                        document.getElementById("disconnect").classList.remove("invisible");
                        document.getElementById("connect").classList.add("invisible");
                        readData(); // Přidáno volání funkce pro čtení dat
                    }
                );
            }
        );
    }

    async function readData() {
    if (port) {
        const textDecoder = new TextDecoderStream();
        const readableStreamClosed = port.readable.pipeTo(textDecoder.writable);
        reader = textDecoder.readable.getReader();

        let partialMessage = ''; // Variable to accumulate partial message

        while (true) {
            try {
                const { value, done } = await reader.read();
                if (done) {
                    console.log("Reader done, closing.");
                    break;
                }

                // Concatenate the received chunk to the partial message
                partialMessage += value;

                // Check if the partial message contains a newline character
                const newlineIndex = partialMessage.indexOf('\n');
                if (newlineIndex !== -1) {
                    // If a newline is found, print the message and remove it from the partial message
                    const completeMessage = partialMessage.substring(0, newlineIndex + 1);
                    console.log("Received data:", completeMessage);
                    document.getElementById('time').value=completeMessage;
                    partialMessage = partialMessage.substring(newlineIndex + 1);
                }
            } catch (error) {
                console.error("Error reading data:", error);
            }
        }
    }
}

    function _disconnect() {
        if (connection() == false) { return; }
        if (reader) {
            reader.cancel(); // Zrušení čtení před odpojením
        }
        port.forget().then(
            () => {
                addNotificationDisconnect();
                document.getElementById("connect").classList.remove("invisible");
                document.getElementById("disconnect").classList.add("invisible");
            }
        );
    }

    function addNotification() {
        // ... (Zůstává beze změn)
    }

    function addNotificationDisconnect() {
        // ... (Zůstává beze změn)
    }

    function sendData() {
        let Data = document.getElementById('time').value;
        let Tym = document.getElementById('tym').value;
        if(!Data){
            return;
        }else{
            
            console.log(Data, Tym);
        }
    }
</script>

{/block}